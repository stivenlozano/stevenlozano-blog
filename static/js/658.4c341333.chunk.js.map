{"version":3,"file":"static/js/658.4c341333.chunk.js","mappings":"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","sources":["components/molecules/Header/index.tsx","components/molecules/Background/index.tsx","components/molecules/Filters/index.tsx","components/molecules/PostCard/index.tsx","components/molecules/Footer/index.tsx","components/molecules/Comment/index.tsx","components/organisms/PostList/index.tsx","components/atoms/UserInfo/index.tsx","components/organisms/PostSummary/index.tsx","components/templates/Modal/index.tsx","components/organisms/Form/index.tsx","components/templates/Layout/index.tsx","pages/myPosts.tsx"],"sourcesContent":["import React from \"react\"\nimport './styled.css'\nimport { Link } from \"react-router-dom\"\nimport { BsDoorOpenFill } from \"react-icons/bs\"\n\ninterface IProps {\n  userLogin: boolean,\n  userImage: string,\n  userName: string,\n  onSignIn?: () => void,\n  onSignOut?: () => void,\n}\n\nconst Header: React.FC<IProps> = ({ userLogin, userImage, userName, onSignIn, onSignOut }) => {\n  return (\n    <header className=\"header\">\n      <img className=\"header-logo\" src=\"https://static.wixstatic.com/media/8d71f3_9d56ad82a0c84cccbf8f246deb6f3876~mv2.png/v1/fill/w_396,h_396,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/Logo%20Pet%20Shop-02.png\" alt=\"Logo App\" />\n\n      <nav className=\"header-nav\">\n        <Link to=\"/posts\">Blog</Link>\n        { !!userLogin && <Link to=\"/myPosts\">Mis Posts</Link> }\n        { !userLogin && <button onClick={onSignIn}>Iniciar Sesión</button> }\n        \n        { !!userLogin && (\n          <div className=\"header-nav__user\">\n            <img src={userImage} alt=\"User logged in\" />\n            <div>\n              <p>Bienvenido</p>\n              <p>{userName}</p>\n            </div>\n          </div>\n        )}\n\n      { !!userLogin && <BsDoorOpenFill size={22} color={'rgba(255 84 114 / 100%)'} cursor='pointer' onClick={onSignOut}/> }\n      </nav>\n    </header>\n  )\n}\n\nexport default Header","import React from \"react\"\nimport './styled.css'\n\nconst Background: React.FC = () => {\n  return (\n    <section className=\"background\">\n      <div className=\"background-image\">\n        <div className=\"background-image--opacity\"></div>\n      </div>\n\n      <div className=\"background-content\">\n        <h1>TÚ NO TIENES UNA MASCOTA, LA MASCOTA TE TIENE A TI</h1>\n        <p>\"No importa lo que hagas o como le trates, el amor de las mascotas es infinito, su cariño es inmenso y su fidelidad es incondicional\"</p>\n\n        <a href=\"#content-main\">Conoce Nuestras Mascotas</a>\n      </div>\n    </section>\n  )\n}\n\nexport default Background","import React from \"react\"\nimport './styled.css'\nimport { BsFillGrid1X2Fill, BsGrid3X3GapFill, BsSearch } from \"react-icons/bs\";\n\ninterface IProps {\n  tags?: string[],\n  onClick?: (value: string) => void,\n  onChange?: (value: string) => void,\n  onClickTag?: (value: string) => void,\n}\n\nconst Filters: React.FC<IProps> = ({ tags, onClick = () => null, onChange = () => null, onClickTag= () => null }) => {\n  return (\n    <section className=\"content-filters\">\n      <div className=\"content-filters__display\">\n        <BsFillGrid1X2Fill size={22} color={'rgba(255 84 114 / 100%)'} cursor='pointer' onClick={() => onClick('grid')}/>\n        <BsGrid3X3GapFill size={24} color={'rgba(255 84 114 / 100%)'} cursor='pointer' onClick={() => onClick('list')}/>\n      </div>\n{/* \n      <div className=\"content-filters__search\">\n        <div>\n          <input type=\"text\" placeholder=\"Buscar...\" onChange={(event) => onChange(event.target.value)}/>\n          <BsSearch size={16} color={'rgba(0 0 0 / 60%)'}/>\n        </div>\n      </div> */}\n\n      <div className=\"content-filters__tags\">\n        {\n          tags?.map((tag: string, index: number) => <button key={index.toString()} onClick={() => onClickTag(tag)}>{tag}</button>)\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default Filters","import React from \"react\"\nimport './styled.css'\nimport { IPost } from \"../../../store/posts\"\n\ninterface IProps {\n  data: IPost,\n  index: number,\n  display?: string,\n  onClick: (id: string) => void,\n} \n\nconst PostCard: React.FC<IProps> = ({ display, data, index, onClick }) => {\n  const indexGrid = index > 19 ? index - 19 : index + 1\n\n  return (\n    <div key={indexGrid.toString()} className={`content-posts__item ${ display === 'grid' && `post--${indexGrid}` }`}>\n      <img className=\"content-posts__item-img\" src={data.image} alt={data.text} />\n\n      <div className=\"content-posts__item-info\">\n        <p>{data.text}</p>\n\n        <button onClick={() => onClick(data.id)}>Leer Post</button>\n      </div>\n    </div>\n  )\n}\n\nexport default PostCard","import React from \"react\"\nimport './styled.css'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <p>2022 - Blog Realizado Por <span>Bryan Steven Lozano Torres</span></p>\n    </footer>\n  )\n}\n\nexport default Footer","import React from \"react\"\nimport './styled.css'\n\ninterface IProps {\n  owner: string,\n  title: string,\n  text: string,\n}\n\nconst Comment: React.FC<IProps> = ({ owner, title, text }) => {\n  return (\n    <div className=\"post-comment\">\n      <img className=\"post-comment__owner\" src={owner} alt=\"Comment Owner\" />\n\n      <div className=\"post-comment__content\">\n        <p className=\"post-comment__content-title\">{title}</p>\n        <p className=\"post-comment__content-text\">{text}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Comment","import React, {useEffect, useState} from \"react\"\nimport './styled.css'\nimport { IPost } from \"../../../store/posts\"\nimport { Filters, PostCard } from '../../molecules'\n\ninterface IPosts {\n  data: IPost[],\n}\n\ninterface IProps {\n  display?: string,\n  tags?: string[],\n  posts: IPosts[],\n  filters?: boolean,\n  onClickDisplay?: (value: string) => void, \n  onClickShowMore?: () => void, \n  onClickTag?: (value: string) => void, \n  onClickPost: (value: string) => void, \n}\n\nconst PostList: React.FC<IProps> = ({ display, tags,  posts, filters, onClickDisplay, onClickShowMore, onClickTag, onClickPost }) => {\n  const [postsFiltered, setPostFilteres] = useState<IPosts[]>([])\n\n  useEffect(() => {\n    setPostFilteres(posts)\n  }, [posts])\n\n  const handleSearch = (value: string) => {\n    // const text = value.toLowerCase().trim()\n    // const data = posts.filter((post: IPost) => post.text.toLowerCase().includes(text) || post.tags.some((tag: string) => tag.includes(text)))\n    // setPostFilteres(data)\n  }\n\n  return (\n    <main id=\"content-main\" className=\"content\">\n      { !!filters && <Filters tags={tags} onClick={onClickDisplay} onChange={handleSearch} onClickTag={onClickTag}/> }\n\n        {\n          postsFiltered.map((postsByPage: IPosts, index: number) => \n            <section key={index.toString()} className={`content-posts \n              ${ display === 'grid' && 'display-grid'}\n              ${ display === 'list' && 'display-list'}\n            `}>\n              { postsByPage.data?.map((post: IPost, index: number) => \n                <PostCard \n                  key={index.toString()} \n                  display={display} \n                  data={post} \n                  index={index} \n                  onClick={(id: string) => onClickPost(id)}\n                />) }\n            </section>\n          )\n        }\n      \n\n      { !!filters && <button className=\"btn-show-more\" onClick={onClickShowMore}>Mostrar Más</button> }\n    </main>\n  )\n}\n\nexport default PostList","import React from \"react\"\nimport './styled.css'\n\ninterface IProps {\n  image?: string,\n  title?: string,\n  text?: string,\n}\n\nconst UserInfo: React.FC<IProps> = ({ image, title, text }) => {\n  return (\n    <div className=\"user-info\">\n      <img className=\"user-info__img\" src={image} alt=\"User logged in\" />\n      <div>\n        <p className=\"user-info__title\">{title}</p>\n        <p className=\"user-info__text\">{text}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default UserInfo","import React from \"react\"\nimport './styled.css'\nimport { IPost, IComment } from \"../../../store/posts\"\nimport { Comment } from '../../molecules'\nimport {UserInfo} from \"../../atoms\"\n\ninterface IProps {\n  data: IPost,\n  comments: IComment[],\n}\n\nconst PostSummary: React.FC<IProps> = ({ data, comments }) => {\n  return (\n    <main className=\"content\">\n      <div className='content-post'>\n        <img className='content-post__img' src={data?.image} alt={data?.text} />\n\n        <div className='content-post__owner'>\n          <UserInfo image={data?.owner?.picture} title={`${data?.owner?.firstName} ${data?.owner?.lastName}`} text={data?.publishDate}/>\n        </div>\n\n        <p className=\"content-post__text\">{data?.text}</p>\n\n        <div className=\"content-post__comments\">\n          { comments?.map((comment: IComment) => <Comment key={comment.id} owner={comment.owner.picture} title={`${comment.owner.firstName} ${comment.owner.lastName}`} text={comment.message}/> )}\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default PostSummary","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BsXLg } from \"react-icons/bs\";\nimport './styled.css'\n\ninterface IProps {\n  isOpened: boolean,\n  children: React.ReactNode,\n  onClose: () => void,\n}\n\nconst modalContainer: any = document.querySelector(\"#modal\");\n\nconst Modal: React.FC<IProps>  = ({ children, isOpened, onClose }) => {\n  return isOpened ? (\n    ReactDOM.createPortal(\n      <div className=\"modal\">\n        <div className=\"modal-container\">\n          <div className=\"modal-container__close\">\n            <BsXLg size={16} cursor='pointer' onClick={onClose}/>\n          </div>\n          \n          {children}\n        </div>\n      </div>,\n      modalContainer\n    )\n  ) : null;\n}\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"../../templates/Modal\";\nimport './styled.css'\n\ninterface IField {\n  label?: string,\n  name?: string,\n  type?: string,\n  value?: string,\n  placeholder?: string,\n  errorMessage?: string,\n  required?: boolean,\n}\n\ninterface IProps {\n  isOpened: boolean,\n  type: string,\n  data: IField[],\n  onSubmit: (event: any) => void,\n  onChange: (event: any) => void,\n  onClose: () => void,\n}\n\nconst Form: React.FC<IProps> = ({ type, isOpened, data, onChange, onSubmit, onClose }) => {\n  return (\n    <Modal isOpened={isOpened} onClose={onClose}>\n      <img className=\"form-logo\" src=\"https://static.wixstatic.com/media/8d71f3_9d56ad82a0c84cccbf8f246deb6f3876~mv2.png/v1/fill/w_396,h_396,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/Logo%20Pet%20Shop-02.png\" alt=\"\" />\n\n      <form className=\"form-data\" onSubmit={onSubmit}>\n          {\n            data.map((field: IField, index: number) => \n              <div key={index.toString()} className=\"form-field\">\n                <input type={field.type} placeholder={field.placeholder} name={field.name} value={field.value} onChange={onChange} required autoComplete=\"off\"/>\n                { !!field.errorMessage && <p>{field.errorMessage}</p> }\n              </div>\n            )\n          }\n\n        <button type=\"submit\" className=\"form-btn\">{ type === 'login' ? 'Iniciar sesion' : 'Registrar' }</button>\n      </form>\n    </Modal>\n  )\n}\n\nexport default Form;\n","import React from \"react\";\nimport {Footer, Header} from \"../../molecules\";\nimport './styled.css'\n\ninterface IProps {\n  user: any,\n  isLogin: boolean,\n  children: React.ReactNode,\n  onSignIn: () => void,\n  onSignOut: () => void,\n}\n\nconst Layout: React.FC<IProps>  = ({ user, isLogin, children, onSignIn, onSignOut }) => {\n  return (\n    <div className=\"wrapper\">\n      <Header \n        userLogin={isLogin} \n        userName={`${user?.firstName} ${user?.lastName}`} \n        userImage={user?.picture}\n        onSignIn={onSignIn}\n        onSignOut={onSignOut}\n      />\n      \n      {children}\n\n      <Footer/>\n    </div>\n  )\n}\n\nexport default Layout;\n","import React, {useEffect} from \"react\"\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PATHS } from \"../constants\"\nimport {showFormAction} from \"../store/forms\"\nimport {auth} from \"../firebase\"\nimport Layout from \"../components/templates/Layout\"\nimport {fetchPostByUserAction} from \"../store/posts\"\nimport {PostList} from \"../components/organisms\"\nimport {registerSesionAction} from \"../store/users\"\n\nconst Posts: React.FC = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state: any) => state.users.userLogin)\n  const allUsers = useSelector((state: any) => state.users.allUsers)\n  const postsByUser = useSelector((state: any) => state.posts.postsByUser)\n\n  useEffect( () => {\n    !auth.currentUser && navigate(PATHS.POSTS)\n\n    dispatch(fetchPostByUserAction(userLogin?.id))\n  }, [userLogin])\n\n  useEffect( () => {    \n    (async () => {\n      if (!!auth.currentUser) {\n        const email = String(auth.currentUser?.email)\n        const tokenSesion = await auth.currentUser?.getIdToken()\n  \n        const userLogin = allUsers.find((user:any) => user.email === email)\n        localStorage.setItem(email, JSON.stringify({ ...userLogin, tokenSesion}))\n\n        dispatch(registerSesionAction(String(tokenSesion), userLogin))\n      }\n    })()\n  }, [allUsers])\n\n  const handleClickPost = (id: string) => navigate(`/post/${id}`)\n\n  return (\n    <Layout \n      isLogin={!!auth.currentUser} \n      user={userLogin} \n      onSignIn={() => dispatch(showFormAction(true))} \n      onSignOut={() => auth.signOut().then(() => navigate(PATHS.BASE)) }\n    >\n\n    <PostList \n      display={'list'} \n      posts={[{data: postsByUser}]} \n      onClickPost={handleClickPost}\n    />\n\n   </Layout>\n  )\n}\n\nexport default Posts;"],"names":["userLogin","userImage","userName","onSignIn","onSignOut","className","src","alt","to","onClick","size","color","cursor","href","tags","onChange","onClickTag","map","tag","index","toString","display","data","indexGrid","image","text","id","owner","title","posts","filters","onClickDisplay","onClickShowMore","onClickPost","useState","postsFiltered","setPostFilteres","useEffect","value","postsByPage","post","comments","picture","firstName","lastName","publishDate","comment","message","modalContainer","document","querySelector","children","isOpened","onClose","ReactDOM","type","onSubmit","field","placeholder","name","required","autoComplete","errorMessage","user","isLogin","navigate","useNavigate","dispatch","useDispatch","useSelector","state","users","allUsers","postsByUser","auth","PATHS","fetchPostByUserAction","email","String","getIdToken","tokenSesion","find","localStorage","setItem","JSON","stringify","registerSesionAction","showFormAction","then"],"sourceRoot":""}